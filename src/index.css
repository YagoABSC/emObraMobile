@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


body {
  font-family: 'Poppins';
  height: 100vh;
  overflow-x: hidden;
  align-items: center;
  min-height: 100vh;
  height: fit-content;
  margin: 0 auto;
}

header {
  width: 100%;
  background-color: white;
  padding: 10px;

}

h2 {
  font-size: 1.2em;
}

.botao-entrar,
.modal-cards-btn {
  width: 100%;
  padding: 12px;
  background-color: #FE8813;
  color: white;
  border: none;
  border-radius: 2px;
  font-size: .9em;
  font-weight: 700;
  cursor: pointer;
  transition: background-color 0.3s;
  margin-top: 20px;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);

}

.botao-sair{
  position: absolute;
  top: 20px;
  right: 30px;
  display: flex;
  align-items: center;
  gap: 5px;
  border: none;
  background: none;
  color: #FFFFFF;
  font-size: .9rem;
}

.container-geral {
  width: 100%;
}

.container-responsivo {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin: 0 auto;

  @media (min-width: 750px) {
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    max-width: 100%;
    overflow: hidden;
    max-height: 100vh;
  }
}


/* From Uiverse.io by Yaya12085 */
.radio-inputs {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.radio-inputs>* {
  margin: 6px;
}

.radio-input:checked+.radio-tile {
  box-shadow: 0 5px 10px rgba(219, 157, 64, 0.651);
  background-color: #FE8813;

  img{
    filter: invert(0);
  }
  
}

.radio-input:checked+.radio-tile:before {
  transform: scale(1);
  opacity: 1;
  background-color: #fff;
}

.radio-input:checked+.radio-tile .radio-label {
  transform: scale(1);
  font-weight: bold;
  color: #FFFFFF;
}


.radio-input:focus+.radio-tile:before {
  transform: scale(1);
  opacity: 1;
}

.radio-tile {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 90px;
  min-height: 90px;
  border-radius: 0.5rem;
  background-color: #FFFFFF;
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
  transition: 0.15s ease;
  cursor: pointer;
  position: relative;
  padding: 0 5px;

  img{
    filter: invert(1);
  }
}

.radio-tile:before {
  content: "";
  position: absolute;
  display: block;
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  top: 0.25rem;
  left: 0.25rem;
  opacity: 0;
  transform: scale(0);
  transition: 0.25s ease;
}


.radio-icon img {
  width: 2rem;
  height: 2rem;
}

.radio-label {
  color: #020411;
  transition: 0.375s ease;
  text-align: center;
  font-size: .6rem;

}

.radio-input {
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(100%);
  clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.modal-conteudo {

  p {
    font-size: 16px;
    margin: 10px 0;
  }
}

.botoes-modal, .botoes-modal-termo, .botoes-excluir {
  display: flex;
  justify-content: center;
  gap: 25px;
  margin: 10px;

  .cancelar-btn {
    gap: 10px;
    background-color: whitesmoke;
    color: #020411;
  }
}

.voltar {
  position: absolute;
  top: 10px;
  left: 20px;

  & button {
    background-color: none;
    border: none;
    display: flex;
    align-items: center;
    gap: 5px;
    font-size: 16px;
  }
}


.modal-overlay {
  background-color: rgba(0, 0, 0, 0.5);
  /* Sobrepor com fundo semitransparente */
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-conteudo-termo {
  background: white;
  border-radius: 8px;
  padding: 15px;
  width: 90vw;
  height: 90vh;
  max-width: 650px;
  /* max-height: 600px; */
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.termos-texto {
  max-height: 50vh;
  overflow-y: auto;
  padding: 10px;
  font-size: .9rem;
  /* box-shadow: 0px 0px 8px inset #0204118c; */
  border-radius: 10px;
}

.termos-texto h3 {
  margin: 20px 0 5px 0;
  font-size: 1rem;
}

.termos-texto ul {
  list-style-type: disc;
  /* ou circle/square */
  margin: 20px 0px 20px 20px;
}

.termos-texto p {
  text-indent: 10px;
  text-align: justify;
  hyphens: auto;
}

.termos-texto ul li {
  margin-bottom: 10px;
}

.checkbox-container-termo {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  font-size: .9rem;
}

.botoes-modal-termo {
  display: flex;
  justify-content: space-between;
  gap: 10px;
}

.botoes-modal-termo button{
  margin: 10px 0;
}


/* From Uiverse.io by msadakousema */ 
.checkbox-container {
  display: flex;
  align-items: center;
  cursor: pointer;
}
.checkbox-container label {
  cursor: pointer;
}

.checkbox input[type="checkbox"] {
  display: none; /* Hide the default checkbox */
}
.checkbox {
  width: 14px;
  height: 14px;
  min-width: 14px;
  background-color: transparent;
  margin-right: 0.5rem;
  border-radius: 6px;
  border: 2px solid #555;
  position: relative;
  overflow: hidden;
  transition:
    all 0.3s ease,
    0.2s border cubic-bezier(0.26, 0.62, 0.43, 1.06);
  cursor: pointer;
}

.checkbox::before {
  content: "";
  position: absolute;
  top: 232%; /* Starts outside `.background` */
  left: 50%;
  transform: translate(-50%, -100%) scale(0.75); /* Scaled down initially */
  border-radius: 50% 20% / 30% 70%;
  width: 115%;
  height: 115%;
  filter: blur(4px);
  background: #FE8813;
  z-index: 1; /* Places the pseudo-element behind `.download` */
  transition:
    transform 0.56s cubic-bezier(0.5, 0.26, 0.7, 1.8),
    top 0.38s ease,
    filter 0.48s ease; /* Smooth position and scaling transitions */
}
.checkbox::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 75%;
  height: 75%;
  clip-path: polygon(
    41% 52%,
    26% 35%,
    10% 51%,
    37% 88%,
    37% 88%,
    37% 88%,
    37% 88%,
    91% 33%,
    78% 18%
  );
  background: white;
  z-index: 1;
  opacity: 0; /* Initially hidden */
  transition: all 0.3s cubic-bezier(0.93, 0.17, 0.43, 1.07);
}

/* Use :has selector to target the checkbox when it's checked */
.checkbox-container:has(.checkbox input[type="checkbox"]:checked)
  .checkbox::before {
  top: 50%; /* Moves to the center of `` */
  transform: translate(-50%, -50%) scale(1); /* Fully fills the `.download` */
  filter: blur(0px);
}

/* Ensure the pseudo-element reacts to the checkbox state */
.checkbox-container:has(.checkbox input[type="checkbox"]:checked)
  .checkbox::after {
  opacity: 1;
  transform: translate(-50%, -50%) perspective(70px) scale(1);
  animation: checkmarkAnimation 0.5s ease-in-out forwards;
}

.checkbox:has(input[type="checkbox"]:checked) {
  border: 0px solid; /* Border disappears when checked */
}

@keyframes checkmarkAnimation {
  0% {
    opacity: 0;
    transform: perspective(70px) translate(10%, -20%) rotate(43deg)
      rotateY(100deg) scale(0);
  }
  50% {
    opacity: 1;
    transform: perspective(70px) translate(-57%, -42%) rotate(32deg)
      rotateY(55deg) scale(1.32);
  }
  100% {
    opacity: 1;
    transform: perspective(70px) translate(-50%, -50%) rotate(0deg)
      rotateY(0deg) scale(1);
  }
}

/* Estilo para a classe 'erro' nos checkboxes */
.checkbox-container.erro input {
    border: 2px solid red;
}

.erro-texto {
    color: red;
    font-size: 12px;
    margin-top: 5px;
}

.error-message {
  color: red;
  font-size: 14px;
  margin-top: 10px;
}

.aceitar-termos{
  margin-top: 15px; 
  padding: 5px;
  background-color: #020411dc;
  color: #fff;
  border-radius: 2px;
  font-size: .9rem;
  box-shadow: 1px 1px 4px #0204116c;
}

